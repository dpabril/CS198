CS 198/199 Implementation Tasks

Application:
  CS 198:
    ☐ QR Code Method
      * Scanning QR codes instead of images solves the issue of unreliability thanks to varying lighting conditions
      * This is also a good solution for relocalization by placing QR codes in the areas covered by the application

      ☐ QR Code Scanner
        ✔ Basic QR scanning functionality @done (18-12-06 16:36)
        ✔ Set minimum distance to QR code (arm's length) @done (18-12-07 14:29)
        ☐ Detect codes that do not exist in the database, and display informative message @high
          * Prevents application from crashing when fed irrelevant QR codes
        ☐ Keep QR code in center of screen @low
          * This is to keep the user at the desired distance from the QR code image
      ☐ Print QR codes for testing
      ☐ Add Boolean variable for determining whether this is the first scan or not @low
      ☐ Move list setting and texture changing logic to launchNavigator() @low

    ✔ SQLite Database @done (18-12-14 18:07)
     _Stores:_
      * QR code information
      * Location information
        * Building
          * Floor
          * Relative altitude range, with 0.0 as lowest relevant floor
          * Corresponding image
          * <?> User rotation offset
          * Rooms
            * Scene coordinates of location pin marker
      ✔ Design the schema @done (18-12-07 14:28)
      ✔ Create a Swift class for static query functions to the DB @done (18-12-13 19:11)
    ☐ Navigation View
      * Change plane size and material depending on most recently scanned location + relative altitude reading
      ✔ Program scene adjustments @done (18-12-14 18:07)
        * Refers to translation of location and user markers
      ☐ Refine filter and movement vector calculation
        * Create a Filter class, with mirror, low-pass, and high-pass options
      ✔ Replace ARKit with SceneKit @done (18-12-13 19:11)

      Issues:
        ✔ Fix "Error: Failed to load <image>" @high @done (18-12-14 12:42) -- tanga lang si Xcode di makita yung folder
        
    ☐ Indoor Location List View
      ✔ Build query function for acquiring the list @done (18-12-14 18:07)
      ✔ Bind table cells to rows in the database @done (18-12-13 19:12)
      ☐ Table cell subtitles @low

  CS 199:
    ☐ Outdoor Nav Subfunction
      ☐ Integrate into app using MapKit
Paper:
  ☐ Write the paper, bois
    ☐ Include cool af diagram for data flow / high-level concept
